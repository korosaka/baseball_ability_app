package com.websarva.wings.android.abiityofbaseball

import android.content.Context
import com.websarva.wings.android.abiityofbaseball.activity.AnswerQuestionsActivity

class CalcAbility(
        private val context: Context,
        private val a1_a: String, private val a2_a: String, private val a3_a: String, private val a4_a: String, private val a5_a: String,
        private val a1_p: String, private val a2_p: String, private val a3_p: String, private val a4_p: String, private val a5_p: String,
        private val a1_o: String, private val a2_o: String, private val a3_o: String, private val a4_o: String, private val a5_o: String) {

    companion object {
        const val CATCHER_INDEX = 0
        const val FIRST_BASE_INDEX = 1
        const val SECOND_BASE_INDEX = 2
        const val THIRD_BASE_INDEX = 3
        const val SHORTSTOP_INDEX = 4
        const val OUTFIELD_INDEX = 5

        const val STARTER_INDEX = 0
        const val MIDDLE_INDEX = 1
        const val CLOSER_INDEX = 2

        const val SLIDER_INDEX = 0
        const val CURB_INDEX = 1
        const val FOLK_INDEX = 2
        const val SINKER_INDEX = 3
        const val SHOOT_INDEX = 4
    }

    // 野手能力ポイント
    var ballistic = 0
    var contact = 0
    var power = 0
    var speed = 0
    var armStrength = 0
    var fielding = 0
    var catching = 0

    private var positions = intArrayOf(0, 0, 0, 0, 0, 0)
    lateinit var position: String

    var chance = 1.0

    // 投手能力ポイント
    var ballSpeed = 0
    var control = 0
    var stamina = 0
    var kindsOfChangeBall = 0
    var amountOfChange = 0
    var priorityOfChange = arrayListOf(0, 0, 0, 0, 0)

    private var pitcherTypes = intArrayOf(0, 0, 0)
    lateinit var pitcherType: String


    init {

        if (AnswerQuestionsActivity.sex_id == Constants.ID_MAN) {
            calcManAbility()
        } else {
            calcWomanAbility()
        }

    }

    private fun calcManAbility() {
        val manAnswersA1 = context.resources.getStringArray(R.array.m_array_q1_a)

        when (a1_a) {
            manAnswersA1[0] -> {
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, 6)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.SPEED, 4)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.CONTROL, 5)
                plusAbility(Constants.STAMINA, 1)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 5)
                plusAbility(Constants.MIDDLE, 5)

            }
            manAnswersA1[1] -> {
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, 3)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 7)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 4)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.CURB, 3)
                plusAbility(Constants.MIDDLE, 3)

            }
            manAnswersA1[2] -> {
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.BALLISTIC, 4)
                plusAbility(Constants.POWER, 10)
                plusAbility(Constants.ARM_STRENGTH, 1)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 4)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.CURB, 2)
                plusAbility(Constants.FOLK, 5)
                plusAbility(Constants.STARTER, 3)
            }
            manAnswersA1[3] -> {
                plusAbility(Constants.FIRST_BASE, 4)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 6)
                plusAbility(Constants.POWER, 16)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.BALL_SPEED, 12)
                plusAbility(Constants.CONTROL, 2)
                plusAbility(Constants.STAMINA, 7)
                plusAbility(Constants.AMOUNT_CHANGE, 6)
                plusAbility(Constants.SLIDER, 4)
                plusAbility(Constants.FOLK, 12)
                plusAbility(Constants.STARTER, 3)
                plusAbility(Constants.MIDDLE, -3)
            }
            manAnswersA1[4] -> {
                plusAbility(Constants.FIRST_BASE, 6)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.SHORTSTOP, -3)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 8)
                plusAbility(Constants.POWER, 20)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.BALL_SPEED, 16)
                plusAbility(Constants.CONTROL, 1)
                plusAbility(Constants.STAMINA, 10)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
                plusAbility(Constants.SLIDER, 5)
                plusAbility(Constants.FOLK, 18)
                plusAbility(Constants.STARTER, 3)
                plusAbility(Constants.MIDDLE, -5)

            }
        }
        val manAnswersA2 = context.resources.getStringArray(R.array.m_array_q2_a)
        when (a2_a) {
            manAnswersA2[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 1)

            }
            manAnswersA2[1] -> {
                plusAbility(Constants.CATCHER, -2)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.FIELDING, 2)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 6)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SHOOT, 3)
                plusAbility(Constants.CLOSER, -3)
            }
            manAnswersA2[2] -> {
                plusAbility(Constants.CATCHER, 6)
                plusAbility(Constants.FIRST_BASE, 6)
                plusAbility(Constants.SECOND_BASE, -15)
                plusAbility(Constants.THIRD_BASE, 2)
                plusAbility(Constants.SHORTSTOP, -15)
                plusAbility(Constants.BALLISTIC, 20)
                plusAbility(Constants.POWER, 6)
                plusAbility(Constants.SPEED, -12)
                plusAbility(Constants.ARM_STRENGTH, -6)
                plusAbility(Constants.BALL_SPEED, 9)
                plusAbility(Constants.CONTROL, 1)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.CURB, 5)
                plusAbility(Constants.CLOSER, 1)
            }
            manAnswersA2[3] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, 3)
                plusAbility(Constants.SECOND_BASE, -9)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, -7)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, -3)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.BALL_SPEED, 8)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.STAMINA, 7)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.SHOOT, 3)
                plusAbility(Constants.CLOSER, 2)
            }
            manAnswersA2[4] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, 3)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -2)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 6)
                plusAbility(Constants.POWER, 12)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.BALL_SPEED, 15)
                plusAbility(Constants.CONTROL, 2)
                plusAbility(Constants.STAMINA, 13)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.SHOOT, 2)
                plusAbility(Constants.STARTER, 5)
            }
            manAnswersA2[5] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, 4)
                plusAbility(Constants.SECOND_BASE, -15)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -8)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 9)
                plusAbility(Constants.POWER, 18)
                plusAbility(Constants.SPEED, -10)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.BALL_SPEED, 25)
                plusAbility(Constants.CONTROL, -1)
                plusAbility(Constants.STAMINA, -5)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SHOOT, 2)
                plusAbility(Constants.CLOSER, 4)
            }
        }
        val manAnswersA3 = context.resources.getStringArray(R.array.m_array_q3_a)
        when (a3_a) {
            manAnswersA3[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 1)
            }
            manAnswersA3[1] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 8)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 5)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, 6)
                plusAbility(Constants.CATCHING, 3)
                plusAbility(Constants.BALL_SPEED, 8)
                plusAbility(Constants.CONTROL, 7)
                plusAbility(Constants.STAMINA, 7)
                plusAbility(Constants.KIND_CHANGE, 10)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.SHOOT, 2)
                plusAbility(Constants.STARTER, 5)
            }
            manAnswersA3[2] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 8)
                plusAbility(Constants.SPEED, 5)
                plusAbility(Constants.ARM_STRENGTH, 8)
                plusAbility(Constants.BALL_SPEED, 11)
                plusAbility(Constants.CONTROL, 2)
                plusAbility(Constants.STAMINA, 12)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.SHOOT, 5)

            }
            manAnswersA3[3] -> {
                plusAbility(Constants.CATCHER, -4)
                plusAbility(Constants.FIRST_BASE, -4)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, -1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 11)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 4)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 8)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 8)
                plusAbility(Constants.AMOUNT_CHANGE, 12)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 5)
                plusAbility(Constants.FOLK, 1)
                plusAbility(Constants.SINKER, 3)
                plusAbility(Constants.MIDDLE, 4)
            }
            manAnswersA3[4] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -4)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 8)
                plusAbility(Constants.BALL_SPEED, 10)
                plusAbility(Constants.CONTROL, 1)
                plusAbility(Constants.STAMINA, 7)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SHOOT, 10)
            }
        }
        val manAnswersA4 = context.resources.getStringArray(R.array.m_array_q4_a)
        when (a4_a) {
            manAnswersA4[0] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 6)
                plusAbility(Constants.BALL_SPEED, 2)
                plusAbility(Constants.CONTROL, 8)
                plusAbility(Constants.STAMINA, 6)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 10)
                plusAbility(Constants.CURB, 3)
                plusAbility(Constants.FOLK, 1)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.MIDDLE, 2)
            }
            manAnswersA4[1] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 4)
                plusAbility(Constants.BALLISTIC, 4)
                plusAbility(Constants.CONTACT, 4)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 2)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 10)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 1)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.STARTER, 3)
            }
            manAnswersA4[2] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 6)
                plusAbility(Constants.CATCHING, 5)
                plusSpecial(Constants.CHANCE, -0.02)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 10)
                plusAbility(Constants.STAMINA, 10)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 1)
                plusAbility(Constants.FOLK, 1)
                plusAbility(Constants.CLOSER, -3)
            }
            manAnswersA4[3] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.THIRD_BASE, -3)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 7)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, 4)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 4)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.FOLK, 4)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.SHOOT, 3)
            }
            manAnswersA4[4] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -2)
                plusAbility(Constants.OUTFIELD, 6)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 2)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, 4)
                plusAbility(Constants.STAMINA, 6)
                plusAbility(Constants.KIND_CHANGE, 4)
                plusAbility(Constants.AMOUNT_CHANGE, 10)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 4)
                plusAbility(Constants.SINKER, 7)
                plusAbility(Constants.MIDDLE, 2)
            }
            manAnswersA4[5] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 5)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 7)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.BALL_SPEED, 8)
                plusAbility(Constants.CONTROL, -1)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SHOOT, 5)
                plusAbility(Constants.CLOSER, -2)
            }
        }
        val manAnswersA5 = context.resources.getStringArray(R.array.m_array_q5_a)
        when (a5_a) {
            manAnswersA5[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 1)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 1)
            }
            manAnswersA5[1] -> {
                plusAbility(Constants.CATCHER, -2)
                plusAbility(Constants.FIRST_BASE, -5)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.CONTACT, 4)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 8)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 4)
                plusAbility(Constants.CATCHING, 2)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 6)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 12)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SINKER, 3)
                plusAbility(Constants.STARTER, 1)
            }
            manAnswersA5[2] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 5)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 8)
                plusAbility(Constants.STAMINA, 8)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 2)
                plusAbility(Constants.MIDDLE, 4)
            }
            manAnswersA5[3] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 5)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 6)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.CATCHING, -1)
                plusAbility(Constants.BALL_SPEED, 9)
                plusAbility(Constants.CONTROL, 1)
                plusAbility(Constants.STAMINA, 2)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.SHOOT, 5)
                plusAbility(Constants.CLOSER, 4)
            }
            manAnswersA5[4] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.FIRST_BASE, 5)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.ARM_STRENGTH, 1)
                plusSpecial(Constants.CHANCE, 0.04)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 4)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 12)
                plusAbility(Constants.STARTER, -5)
            }
        }
        val manAnswersP1 = context.resources.getStringArray(R.array.m_array_q1_p)
        when (a1_p) {
            manAnswersP1[0] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 4)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 4)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 9)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.CURB, 2)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.CLOSER, -2)
            }
            manAnswersP1[1] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, -5)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, -1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.ARM_STRENGTH, 1)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 4)
                plusAbility(Constants.CONTROL, 8)
                plusAbility(Constants.STAMINA, 6)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 1)
                plusAbility(Constants.MIDDLE, 3)
            }
            manAnswersP1[2] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 2)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, -1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 2)
                plusAbility(Constants.STAMINA, 6)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SHOOT, 5)
                plusAbility(Constants.MIDDLE, 2)
            }
            manAnswersP1[3] -> {
                plusAbility(Constants.CATCHER, -4)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, -4)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, -2)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 4)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, -2)
                plusAbility(Constants.CATCHING, -4)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, -3)
                plusAbility(Constants.STAMINA, 2)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SHOOT, 4)
                plusAbility(Constants.CLOSER, 2)

            }
            manAnswersP1[4] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 5)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, -1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.POWER, 3)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 2)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 10)
                plusAbility(Constants.FOLK, 5)
                plusAbility(Constants.MIDDLE, 2)
            }
        }
        val manAnswersP2 = context.resources.getStringArray(R.array.m_array_q2_p)
        when (a2_p) {
            manAnswersP2[0] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 1)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 5)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 10)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 7)
                plusAbility(Constants.AMOUNT_CHANGE, 7)
                plusAbility(Constants.CURB, 2)
                plusAbility(Constants.FOLK, 1)
                plusAbility(Constants.SINKER, 1)
            }
            manAnswersP2[1] -> {
                plusAbility(Constants.CATCHER, 5)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.STAMINA, 15)
                plusAbility(Constants.KIND_CHANGE, 6)
                plusAbility(Constants.AMOUNT_CHANGE, 6)
                plusAbility(Constants.STARTER, 10)
            }
            manAnswersP2[2] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.CONTACT, -2)
                plusAbility(Constants.ARM_STRENGTH, 8)
                plusAbility(Constants.CATCHING, -1)
                plusAbility(Constants.BALL_SPEED, 8)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.SHOOT, 12)
                plusAbility(Constants.CLOSER, 4)
            }
            manAnswersP2[3] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.THIRD_BASE, -3)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.MIDDLE, 4)
            }
            manAnswersP2[4] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 6)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 4)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, 2)
                plusSpecial(Constants.CHANCE, 0.03)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.CLOSER, 6)

            }
            manAnswersP2[5] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, 4)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.POWER, 1)
                plusAbility(Constants.SPEED, 5)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.STAMINA, 10)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SHOOT, 4)
                plusAbility(Constants.CLOSER, 2)
                plusAbility(Constants.STARTER, 4)
            }
        }
        val manAnswersP3 = context.resources.getStringArray(R.array.m_array_q3_p)
        when (a3_p) {
            manAnswersP3[0] -> {
                plusAbility(Constants.CATCHER, 5)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 4)
                plusAbility(Constants.BALL_SPEED, 8)
                plusAbility(Constants.CONTROL, 4)
                plusAbility(Constants.STAMINA, 20)
                plusAbility(Constants.KIND_CHANGE, 4)
                plusAbility(Constants.AMOUNT_CHANGE, 4)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.SHOOT, 2)
                plusAbility(Constants.STARTER, 10)
            }
            manAnswersP3[1] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, -5)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, -2)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.FIELDING, 4)
                plusAbility(Constants.CATCHING, 5)
                plusAbility(Constants.BALL_SPEED, 2)
                plusAbility(Constants.CONTROL, 6)
                plusAbility(Constants.STAMINA, 6)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.CURB, 1)
                plusAbility(Constants.MIDDLE, 3)
            }
            manAnswersP3[2] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 5)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, 2)
                plusAbility(Constants.CATCHING, 2)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.CONTROL, 4)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 6)
                plusAbility(Constants.AMOUNT_CHANGE, 7)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SINKER, 4)
                plusAbility(Constants.MIDDLE, 1)
            }
            manAnswersP3[3] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 2)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, -1)
                plusAbility(Constants.CONTACT, -2)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, -2)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.FIELDING, -1)
                plusSpecial(Constants.CHANCE, -0.02)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, -1)
                plusAbility(Constants.KIND_CHANGE, -1)
                plusAbility(Constants.SHOOT, 7)
                plusAbility(Constants.MIDDLE, 2)
            }
            manAnswersP3[4] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.THIRD_BASE, -4)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 4)
                plusAbility(Constants.CATCHING, 3)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 6)
                plusAbility(Constants.KIND_CHANGE, 12)
                plusAbility(Constants.AMOUNT_CHANGE, 12)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SINKER, 4)
                plusAbility(Constants.MIDDLE, 1)
            }
        }
        val manAnswersP4 = context.resources.getStringArray(R.array.m_array_q4_p)
        when (a4_p) {
            manAnswersP4[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 1)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 1)
            }
            manAnswersP4[1] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, -4)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, -1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 6)
                plusAbility(Constants.CATCHING, 6)
                plusSpecial(Constants.CHANCE, -0.01)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 9)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.CLOSER, -2)
            }
            manAnswersP4[2] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, -3)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.SPEED, 9)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.FIELDING, 6)
                plusAbility(Constants.CATCHING, 2)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 6)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 15)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.SINKER, 2)
            }
            manAnswersP4[3] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, 2)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, -4)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 4)
                plusAbility(Constants.CONTACT, -1)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, -4)
                plusAbility(Constants.CATCHING, -2)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, -5)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, -5)
                plusAbility(Constants.AMOUNT_CHANGE, -4)
                plusAbility(Constants.MIDDLE, -2)
            }
            manAnswersP4[4] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, 5)
                plusAbility(Constants.SECOND_BASE, -4)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -3)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.CONTACT, -3)
                plusAbility(Constants.POWER, 6)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, -3)
                plusAbility(Constants.CATCHING, -3)
                plusSpecial(Constants.CHANCE, -0.5)
                plusAbility(Constants.BALL_SPEED, 9)
                plusAbility(Constants.CONTROL, -3)
                plusAbility(Constants.STAMINA, 10)
                plusAbility(Constants.KIND_CHANGE, -2)
                plusAbility(Constants.AMOUNT_CHANGE, -2)
                plusAbility(Constants.STARTER, 5)
            }
        }
        val manAnswersP5 = context.resources.getStringArray(R.array.m_array_q5_p)
        when (a5_p) {
            manAnswersP5[0] -> {
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 1)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
            }
            manAnswersP5[1] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 2)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 5)
                plusAbility(Constants.BALLISTIC, 6)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 1)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 2)
                plusAbility(Constants.CATCHING, -1)
                plusSpecial(Constants.CHANCE, 0.03)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 1)
                plusAbility(Constants.KIND_CHANGE, 8)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
            }
            manAnswersP5[2] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, -2)
                plusAbility(Constants.OUTFIELD, 4)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.SPEED, 3)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 10)
            }
            manAnswersP5[3] -> {
                plusAbility(Constants.CATCHER, 4)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 6)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 3)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 8)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 6)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.STARTER, 3)
            }
            manAnswersP5[4] -> {
                plusAbility(Constants.THIRD_BASE, -3)
                plusAbility(Constants.OUTFIELD, -3)
                plusAbility(Constants.POWER, -2)
                plusAbility(Constants.FIELDING, -2)
                plusAbility(Constants.CATCHING, -1)
                plusSpecial(Constants.CHANCE, -0.03)
                plusAbility(Constants.CONTROL, -2)
                plusAbility(Constants.KIND_CHANGE, -3)
                plusAbility(Constants.AMOUNT_CHANGE, -3)
            }
            manAnswersP5[5] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -4)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, -5)
                plusAbility(Constants.OUTFIELD, 4)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 8)
                plusAbility(Constants.ARM_STRENGTH, 6)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 3)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 8)
                plusAbility(Constants.CONTROL, 6)
                plusAbility(Constants.STAMINA, 7)
                plusAbility(Constants.KIND_CHANGE, 10)
                plusAbility(Constants.AMOUNT_CHANGE, 10)
            }
        }
        val manAnswersPop1 = context.resources.getStringArray(R.array.m_array_q1_o)
        when (a1_o) {
            manAnswersPop1[0] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, -5)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 8)
                plusAbility(Constants.CONTACT, 13)
                plusAbility(Constants.POWER, 9)
                plusAbility(Constants.SPEED, 8)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 3)
                plusAbility(Constants.BALL_SPEED, 15)
                plusAbility(Constants.CONTROL, 5)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 12)
                plusAbility(Constants.AMOUNT_CHANGE, 12)
                plusAbility(Constants.STARTER, 4)
            }
            manAnswersPop1[1] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 5)
                plusAbility(Constants.CONTACT, 8)
                plusAbility(Constants.POWER, 7)
                plusAbility(Constants.SPEED, 6)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 3)
                plusAbility(Constants.BALL_SPEED, 11)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 9)
                plusAbility(Constants.AMOUNT_CHANGE, 9)
                plusAbility(Constants.STARTER, 2)
            }
            manAnswersPop1[2] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 4)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 7)
                plusAbility(Constants.SPEED, 8)
                plusAbility(Constants.ARM_STRENGTH, 7)
                plusSpecial(Constants.CHANCE, 0.03)
                plusAbility(Constants.BALL_SPEED, 11)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 6)
                plusAbility(Constants.AMOUNT_CHANGE, 12)
                plusAbility(Constants.STARTER, -3)
            }
            manAnswersPop1[3] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 2)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.MIDDLE, 2)
            }
            manAnswersPop1[4] -> {
                plusAbility(Constants.SHORTSTOP, -5)
                plusAbility(Constants.CONTACT, -3)
                plusAbility(Constants.POWER, -3)
                plusAbility(Constants.SPEED, -2)
                plusAbility(Constants.ARM_STRENGTH, -1)
                plusAbility(Constants.FIELDING, -1)
                plusAbility(Constants.CATCHING, -1)
                plusAbility(Constants.BALL_SPEED, -2)
                plusAbility(Constants.CONTROL, -1)
                plusAbility(Constants.STAMINA, -1)
                plusAbility(Constants.KIND_CHANGE, -5)
                plusAbility(Constants.AMOUNT_CHANGE, -5)
                plusAbility(Constants.MIDDLE, 3)
            }
        }
        val manAnswersPop2 = context.resources.getStringArray(R.array.m_array_q2_o)
        when (a2_o) {
            manAnswersPop2[0] -> {
                plusAbility(Constants.CATCHER, 5)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.CONTACT, 4)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 6)
                plusAbility(Constants.ARM_STRENGTH, 10)
                plusAbility(Constants.FIELDING, 12)
                plusAbility(Constants.CATCHING, 15)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.CONTROL, 18)
                plusAbility(Constants.STAMINA, 18)
                plusAbility(Constants.KIND_CHANGE, 8)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
                plusAbility(Constants.STARTER, 5)

            }
            manAnswersPop2[1] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 6)
                plusAbility(Constants.FIELDING, 7)
                plusAbility(Constants.CATCHING, 10)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 12)
                plusAbility(Constants.STAMINA, 12)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.STARTER, 3)

            }
            manAnswersPop2[2] -> {
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 5)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.CONTROL, 5)
                plusAbility(Constants.STAMINA, 5)
            }
            manAnswersPop2[3] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.ARM_STRENGTH, -1)
                plusAbility(Constants.FIELDING, -1)
                plusAbility(Constants.CATCHING, -3)
                plusAbility(Constants.CONTROL, -4)
                plusAbility(Constants.STAMINA, -4)
            }
            manAnswersPop2[4] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.CONTACT, -1)
                plusAbility(Constants.POWER, -1)
                plusAbility(Constants.SPEED, -2)
                plusAbility(Constants.ARM_STRENGTH, -3)
                plusAbility(Constants.FIELDING, -3)
                plusAbility(Constants.CATCHING, -6)
                plusAbility(Constants.BALL_SPEED, -1)
                plusAbility(Constants.CONTROL, -10)
                plusAbility(Constants.STAMINA, -10)
                plusAbility(Constants.KIND_CHANGE, -2)
                plusAbility(Constants.AMOUNT_CHANGE, -2)
            }
        }
        val manAnswersPop3 = context.resources.getStringArray(R.array.m_array_q3_o)
        when (a3_o) {
            manAnswersPop3[0] -> {
                plusSpecial(Constants.CHANCE, 0.15)
                plusAbility(Constants.CLOSER, 3)

            }
            manAnswersPop3[1] -> {
                plusSpecial(Constants.CHANCE, 0.08)
                plusAbility(Constants.CLOSER, 2)
            }
            manAnswersPop3[2] -> {
            }
            manAnswersPop3[3] -> {
                plusSpecial(Constants.CHANCE, -0.08)
                plusAbility(Constants.MIDDLE, 2)
            }
            manAnswersPop3[4] -> {
                plusSpecial(Constants.CHANCE, -0.15)
                plusAbility(Constants.MIDDLE, 4)
            }
        }
        val manAnswersPop5 = context.resources.getStringArray(R.array.m_array_q5_o)
        when (a5_o) {
            manAnswersPop5[0] -> {
            }
            manAnswersPop5[1] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, -5)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 10)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 7)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, 4)
                plusAbility(Constants.CATCHING, 2)
                plusSpecial(Constants.CHANCE, 0.05)
                plusAbility(Constants.BALL_SPEED, 8)
                plusAbility(Constants.CONTROL, 16)
                plusAbility(Constants.KIND_CHANGE, 16)
                plusAbility(Constants.AMOUNT_CHANGE, 16)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.FOLK, 4)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.SHOOT, 4)
                plusAbility(Constants.MIDDLE, -5)
            }
            manAnswersPop5[2] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 5)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.POWER, 10)
                plusAbility(Constants.SPEED, 10)
                plusAbility(Constants.ARM_STRENGTH, 8)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 2)
                plusAbility(Constants.BALL_SPEED, 15)
                plusAbility(Constants.STAMINA, 25)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.SHOOT, 3)
                plusAbility(Constants.STARTER, 8)
            }
            manAnswersPop5[3] -> {
                plusAbility(Constants.CATCHER, 5)
                plusAbility(Constants.FIRST_BASE, -5)
                plusAbility(Constants.SECOND_BASE, 4)
                plusAbility(Constants.THIRD_BASE, -10)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, -1)
                plusAbility(Constants.CONTACT, 8)
                plusAbility(Constants.SPEED, 5)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 10)
                plusAbility(Constants.CATCHING, 8)
                plusAbility(Constants.CONTROL, 17)
                plusAbility(Constants.KIND_CHANGE, 12)
            }
            manAnswersPop5[4] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, 5)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 6)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, -1)
                plusAbility(Constants.CATCHING, -5)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, -5)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.CLOSER, 3)
            }
            manAnswersPop5[5] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, 5)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -2)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 1)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, -1)
                plusAbility(Constants.CATCHING, -3)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.STAMINA, -8)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SINKER, 3)
                plusAbility(Constants.SHOOT, 4)
                plusAbility(Constants.CLOSER, 3)
            }
            manAnswersPop5[6] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.POWER, 7)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 12)
                plusAbility(Constants.CATCHING, -3)
                plusAbility(Constants.BALL_SPEED, 10)
                plusAbility(Constants.CONTROL, -3)
                plusAbility(Constants.STAMINA, -3)
                plusAbility(Constants.SHOOT, 9)
                plusAbility(Constants.MIDDLE, 2)
            }
        }

        val manAnswersPop4 = context.resources.getStringArray(R.array.m_array_q4_o)
        when (a4_o) {
            manAnswersPop4[0] -> {
                contact = (contact * 1.2).toInt()
                power = (power * 1.2).toInt()
                speed = (speed * 1.2).toInt()
                armStrength = (armStrength * 1.2).toInt()
                fielding = (fielding * 1.2).toInt()
                catching = (catching * 1.2).toInt()
                ballSpeed = (ballSpeed * 1.15).toInt()
                control = (control * 1.15).toInt()
                stamina = (stamina * 1.15).toInt()
                kindsOfChangeBall = (kindsOfChangeBall * 1.3).toInt()
                amountOfChange = (amountOfChange * 1.3).toInt()
            }
            manAnswersPop4[1] -> {
                contact = (contact * 1.1).toInt()
                power = (power * 1.1).toInt()
                speed = (speed * 1.1).toInt()
                armStrength = (armStrength * 1.1).toInt()
                fielding = (fielding * 1.1).toInt()
                catching = (catching * 1.1).toInt()
                ballSpeed = (ballSpeed * 1.1).toInt()
                control = (control * 1.1).toInt()
                stamina = (stamina * 1.1).toInt()
                kindsOfChangeBall = (kindsOfChangeBall * 1.15).toInt()
                amountOfChange = (amountOfChange * 1.15).toInt()
            }
            manAnswersPop4[2] -> {
            }
            manAnswersPop4[3] -> {
                contact = (contact * 1.1).toInt()
                power = (power * 1.1).toInt()
                speed = (speed * 1.1).toInt()
                armStrength = (armStrength * 1.1).toInt()
                fielding = (fielding * 1.1).toInt()
                catching = (catching * 1.1).toInt()
                ballSpeed = (ballSpeed * 1.1).toInt()
                control = (control * 1.1).toInt()
                stamina = (stamina * 1.1).toInt()
                kindsOfChangeBall = (kindsOfChangeBall * 1.1).toInt()
                amountOfChange = (amountOfChange * 1.1).toInt()
            }
            manAnswersPop4[4] -> {
                contact = (contact * 0.9).toInt()
                power = (power * 0.9).toInt()
                speed = (speed * 0.9).toInt()
                armStrength = (armStrength * 0.9).toInt()
                fielding = (fielding * 0.9).toInt()
                catching = (catching * 0.9).toInt()
                control = (control * 0.9).toInt()
                stamina = (stamina * 0.9).toInt()
                kindsOfChangeBall = (kindsOfChangeBall * 0.8).toInt()
                amountOfChange = (amountOfChange * 0.8).toInt()
            }
        }
        setPitcherType()
        calcBallistic()
        setPosition()
    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private fun calcWomanAbility() {

        val womanAnswersA1 = context.resources.getStringArray(R.array.w_array_q1_a)
        when (a1_a) {
            womanAnswersA1[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, 6)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.SPEED, 4)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.CONTROL, 4)
                plusAbility(Constants.STAMINA, 1)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 5)
                plusAbility(Constants.MIDDLE, 5)
            }
            womanAnswersA1[1] -> {
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, 3)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.CURB, 1)
                plusAbility(Constants.MIDDLE, 3)
            }
            womanAnswersA1[2] -> {
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.BALLISTIC, 4)
                plusAbility(Constants.POWER, 6)
                plusAbility(Constants.ARM_STRENGTH, 1)
                plusAbility(Constants.BALL_SPEED, 9)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 4)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.CURB, 1)
                plusAbility(Constants.FOLK, 5)
                plusAbility(Constants.STARTER, 2)
            }
            womanAnswersA1[3] -> {
                plusAbility(Constants.FIRST_BASE, 4)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 6)
                plusAbility(Constants.POWER, 11)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.BALL_SPEED, 13)
                plusAbility(Constants.CONTROL, 2)
                plusAbility(Constants.STAMINA, 7)
                plusAbility(Constants.AMOUNT_CHANGE, 6)
                plusAbility(Constants.SLIDER, 4)
                plusAbility(Constants.FOLK, 12)
                plusAbility(Constants.MIDDLE, -2)
                plusAbility(Constants.STARTER, 3)
            }
            womanAnswersA1[4] -> {
                plusAbility(Constants.FIRST_BASE, 6)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.SHORTSTOP, -3)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 8)
                plusAbility(Constants.POWER, 15)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.BALL_SPEED, 16)
                plusAbility(Constants.CONTROL, 1)
                plusAbility(Constants.STAMINA, 10)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
                plusAbility(Constants.SLIDER, 5)
                plusAbility(Constants.FOLK, 20)
                plusAbility(Constants.MIDDLE, -4)
                plusAbility(Constants.STARTER, 3)
            }
        }

        val womanAnswersA2 = context.resources.getStringArray(R.array.w_array_q2_a)
        when (a2_a) {
            womanAnswersA2[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 2)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 2)
            }
            womanAnswersA2[1] -> {
                plusAbility(Constants.CATCHER, -2)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.SPEED, 8)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 6)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 4)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SHOOT, 2)
                plusAbility(Constants.CLOSER, -2)
            }
            womanAnswersA2[2] -> {
                plusAbility(Constants.CATCHER, 6)
                plusAbility(Constants.FIRST_BASE, 6)
                plusAbility(Constants.SECOND_BASE, -15)
                plusAbility(Constants.THIRD_BASE, 2)
                plusAbility(Constants.SHORTSTOP, -15)
                plusAbility(Constants.BALLISTIC, 20)
                plusAbility(Constants.POWER, 7)
                plusAbility(Constants.SPEED, -12)
                plusAbility(Constants.ARM_STRENGTH, -6)
                plusAbility(Constants.BALL_SPEED, 9)
                plusAbility(Constants.CONTROL, 1)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.CURB, 5)
                plusAbility(Constants.STARTER, -5)
            }
            womanAnswersA2[3] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, 3)
                plusAbility(Constants.SECOND_BASE, -9)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, -7)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, -5)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.BALL_SPEED, 9)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.STAMINA, 7)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SHOOT, 3)
                plusAbility(Constants.CLOSER, 2)
            }
            womanAnswersA2[4] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, 3)
                plusAbility(Constants.SECOND_BASE, -9)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -2)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 5)
                plusAbility(Constants.POWER, 11)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.BALL_SPEED, 18)
                plusAbility(Constants.STAMINA, 8)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.SLIDER, 5)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SHOOT, 2)
                plusAbility(Constants.MIDDLE, -3)
                plusAbility(Constants.STARTER, 3)
            }
            womanAnswersA2[5] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, 20)
                plusAbility(Constants.SECOND_BASE, -20)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, -15)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 25)
                plusAbility(Constants.CONTACT, 10)
                plusAbility(Constants.POWER, 9)
                plusAbility(Constants.SPEED, -10)
                plusAbility(Constants.ARM_STRENGTH, -7)
                plusAbility(Constants.FIELDING, -5)
                plusAbility(Constants.CATCHING, -5)
                plusAbility(Constants.BALL_SPEED, 12)
                plusAbility(Constants.CONTROL, -4)
                plusAbility(Constants.KIND_CHANGE, 9)
                plusAbility(Constants.AMOUNT_CHANGE, 12)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.SHOOT, 2)
                plusAbility(Constants.STARTER, -5)
            }
        }

        val womanAnswersA3 = context.resources.getStringArray(R.array.w_array_q3_a)
        when (a3_a) {
            womanAnswersA3[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 3)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 2)
            }
            womanAnswersA3[1] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, -4)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 10)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.SPEED, 5)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 4)
                plusAbility(Constants.BALL_SPEED, 8)
                plusAbility(Constants.CONTROL, 10)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 15)
                plusAbility(Constants.AMOUNT_CHANGE, 10)
                plusAbility(Constants.CURB, 4)
                plusAbility(Constants.FOLK, 1)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.CLOSER, -10)
            }
            womanAnswersA3[2] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 2)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 7)
                plusAbility(Constants.POWER, 6)
                plusAbility(Constants.SPEED, 7)
                plusAbility(Constants.ARM_STRENGTH, 8)
                plusAbility(Constants.FIELDING, 8)
                plusAbility(Constants.CATCHING, 6)
                plusAbility(Constants.BALL_SPEED, 13)
                plusAbility(Constants.CONTROL, 11)
                plusAbility(Constants.STAMINA, 11)
                plusAbility(Constants.KIND_CHANGE, 10)
                plusAbility(Constants.AMOUNT_CHANGE, 15)
                plusAbility(Constants.SLIDER, 5)
                plusAbility(Constants.FOLK, 5)
                plusAbility(Constants.SINKER, 1)
                plusAbility(Constants.SHOOT, 3)
                plusAbility(Constants.STARTER, 6)
            }
            womanAnswersA3[3] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 8)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 8)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 2)
                plusAbility(Constants.CLOSER, -7)
            }
            womanAnswersA3[4] -> {
                plusAbility(Constants.CATCHER, -4)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 5)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 8)
                plusAbility(Constants.ARM_STRENGTH, 8)
                plusAbility(Constants.CATCHING, -1)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 10)
                plusAbility(Constants.CONTROL, -5)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 15)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SHOOT, 8)
                plusAbility(Constants.CLOSER, 5)
            }
        }

        val womanAnswersA4 = context.resources.getStringArray(R.array.w_array_q4_a)
        when (a4_a) {
            womanAnswersA4[0] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 5)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 9)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 9)
                plusAbility(Constants.CURB, 3)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SINKER, 1)
            }
            womanAnswersA4[1] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 9)
                plusAbility(Constants.BALL_SPEED, 2)
                plusAbility(Constants.CONTROL, 7)
                plusAbility(Constants.STAMINA, 2)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 3)
                plusAbility(Constants.CLOSER, -4)
            }
            womanAnswersA4[2] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -4)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 4)
                plusAbility(Constants.ARM_STRENGTH, 6)
                plusAbility(Constants.CATCHING, -2)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SHOOT, 7)
                plusAbility(Constants.CLOSER, 5)
            }
            womanAnswersA4[3] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 6)
                plusAbility(Constants.SHORTSTOP, -3)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.POWER, 7)
                plusAbility(Constants.SPEED, 6)
                plusAbility(Constants.ARM_STRENGTH, 7)
                plusAbility(Constants.BALL_SPEED, 8)
                plusAbility(Constants.STAMINA, 15)
                plusAbility(Constants.KIND_CHANGE, 4)
                plusAbility(Constants.AMOUNT_CHANGE, 6)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.FOLK, 4)
                plusAbility(Constants.SHOOT, 3)
                plusAbility(Constants.STARTER, 7)
            }
            womanAnswersA4[4] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, -5)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, -1)
                plusAbility(Constants.CONTACT, 4)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.FIELDING, 4)
                plusAbility(Constants.CATCHING, 6)
                plusAbility(Constants.CONTROL, 7)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.CURB, 2)
                plusAbility(Constants.MIDDLE, 5)
            }
            womanAnswersA4[5] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 5)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.SPEED, 6)
                plusAbility(Constants.ARM_STRENGTH, 6)
                plusAbility(Constants.CATCHING, -2)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.CONTROL, -2)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 7)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.SHOOT, 7)
            }
        }

        val womanAnswersA5 = context.resources.getStringArray(R.array.w_array_q5_a)
        when (a5_a) {
            womanAnswersA5[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 1)
            }
            womanAnswersA5[1] -> {
                plusAbility(Constants.CATCHER, -2)
                plusAbility(Constants.FIRST_BASE, -5)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.CONTACT, 4)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 4)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 6)
                plusAbility(Constants.CATCHING, 2)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 5)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 13)
                plusAbility(Constants.AMOUNT_CHANGE, 7)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.SHOOT, 2)
            }
            womanAnswersA5[2] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 6)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 8)
                plusAbility(Constants.STAMINA, 8)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 3)
                plusAbility(Constants.CLOSER, -6)
            }
            womanAnswersA5[3] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 5)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 5)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.CATCHING, -1)
                plusAbility(Constants.BALL_SPEED, 9)
                plusAbility(Constants.CONTROL, 1)
                plusAbility(Constants.STAMINA, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 10)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.SHOOT, 5)
                plusAbility(Constants.MIDDLE, -6)
            }
            womanAnswersA5[4] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.FIRST_BASE, 5)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 4)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.AMOUNT_CHANGE, 15)
                plusAbility(Constants.STARTER, -5)
            }
        }

        val womanAnswersP1 = context.resources.getStringArray(R.array.w_array_q1_p)
        when (a1_p) {
            womanAnswersP1[0] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 4)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 5)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 9)
                plusAbility(Constants.STAMINA, 7)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.CURB, 3)
            }
            womanAnswersP1[1] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, -5)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, -1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 2)
                plusAbility(Constants.CATCHING, 4)
                plusAbility(Constants.BALL_SPEED, 2)
                plusAbility(Constants.CONTROL, 7)
                plusAbility(Constants.STAMINA, 4)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 2)
                plusAbility(Constants.CLOSER, -5)
            }
            womanAnswersP1[2] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 2)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, -1)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 2)
                plusAbility(Constants.STAMINA, 6)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SHOOT, 6)
            }
            womanAnswersP1[3] -> {
                plusAbility(Constants.CATCHER, -2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -4)
                plusAbility(Constants.THIRD_BASE, 6)
                plusAbility(Constants.SHORTSTOP, -3)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, -2)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 4)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.FIELDING, -2)
                plusAbility(Constants.CATCHING, -5)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, -3)
                plusAbility(Constants.STAMINA, 2)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SHOOT, 4)
                plusAbility(Constants.CLOSER, 2)
            }
            womanAnswersP1[4] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.THIRD_BASE, -3)
                plusAbility(Constants.SHORTSTOP, -2)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.CONTACT, -3)
                plusAbility(Constants.FIELDING, -5)
                plusAbility(Constants.CATCHING, -8)
                plusSpecial(Constants.CHANCE, -0.05)
                plusAbility(Constants.CONTROL, -7)
                plusAbility(Constants.STAMINA, -3)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.SHOOT, 3)
                plusAbility(Constants.MIDDLE, 7)
            }

        }

        val womanAnswersP2 = context.resources.getStringArray(R.array.w_array_q2_p)
        when (a2_p) {
            womanAnswersP2[0] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 4)
                plusAbility(Constants.CATCHING, 4)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 9)
                plusAbility(Constants.STAMINA, 6)
                plusAbility(Constants.KIND_CHANGE, 6)
                plusAbility(Constants.AMOUNT_CHANGE, 6)
                plusAbility(Constants.CURB, 3)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SINKER, 1)
            }
            womanAnswersP2[1] -> {
                plusAbility(Constants.CATCHER, 5)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.STAMINA, 16)
                plusAbility(Constants.KIND_CHANGE, 4)
                plusAbility(Constants.AMOUNT_CHANGE, 4)
                plusAbility(Constants.STARTER, 9)
            }
            womanAnswersP2[2] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.CONTACT, -2)
                plusAbility(Constants.ARM_STRENGTH, 9)
                plusAbility(Constants.CATCHING, -1)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 10)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.SHOOT, 12)
                plusAbility(Constants.CLOSER, 5)
            }
            womanAnswersP2[3] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.THIRD_BASE, -3)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 1)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 1)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.MIDDLE, 8)
            }
            womanAnswersP2[4] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 5)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.SPEED, 4)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, 2)
                plusAbility(Constants.CATCHING, -3)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 4)
                plusAbility(Constants.FOLK, 3)
            }
            womanAnswersP2[5] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, 3)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.SPEED, 4)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.STAMINA, 9)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SHOOT, 4)
                plusAbility(Constants.STARTER, 3)
            }
        }

        val womanAnswersP3 = context.resources.getStringArray(R.array.w_array_q3_p)
        when (a3_p) {
            womanAnswersP3[0] -> {
                plusAbility(Constants.CATCHER, 5)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 6)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 3)
                plusAbility(Constants.BALL_SPEED, 10)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 18)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 4)
                plusAbility(Constants.SHOOT, 2)
                plusAbility(Constants.STARTER, 9)
            }
            womanAnswersP3[1] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, -5)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, -2)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 5)
                plusAbility(Constants.BALL_SPEED, 2)
                plusAbility(Constants.CONTROL, 7)
                plusAbility(Constants.STAMINA, 6)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 2)
                plusAbility(Constants.MIDDLE, -7)
            }
            womanAnswersP3[2] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 5)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 3)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, 4)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.SINKER, 3)
                plusAbility(Constants.CLOSER, -4)
            }
            womanAnswersP3[3] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 2)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, -1)
                plusAbility(Constants.CONTACT, -2)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, -2)
                plusAbility(Constants.ARM_STRENGTH, 6)
                plusAbility(Constants.FIELDING, -1)
                plusAbility(Constants.CATCHING, -2)
                plusSpecial(Constants.CHANCE, -0.02)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.CONTROL, -1)
                plusAbility(Constants.KIND_CHANGE, -2)
                plusAbility(Constants.SHOOT, 7)
            }
            womanAnswersP3[4] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.THIRD_BASE, -4)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 4)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 3)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.KIND_CHANGE, 10)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
                plusAbility(Constants.FOLK, 2)
                plusAbility(Constants.SINKER, 4)
                plusAbility(Constants.MIDDLE, 3)
            }

        }

        val womanAnswersP4 = context.resources.getStringArray(R.array.w_array_q4_p)
        when (a4_p) {
            womanAnswersP4[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.CATCHING, 1)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 1)
                plusAbility(Constants.CURB, 1)
            }
            womanAnswersP4[1] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, 5)
                plusAbility(Constants.THIRD_BASE, -4)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, -1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 7)
                plusSpecial(Constants.CHANCE, -0.01)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 10)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.CLOSER, -5)
            }
            womanAnswersP4[2] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, -3)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 1)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.SPEED, 9)
                plusAbility(Constants.ARM_STRENGTH, 6)
                plusAbility(Constants.FIELDING, 7)
                plusAbility(Constants.CATCHING, 3)
                plusSpecial(Constants.CHANCE, 0.03)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 5)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 13)
                plusAbility(Constants.AMOUNT_CHANGE, 7)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.SINKER, 2)
            }
            womanAnswersP4[3] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, 2)
                plusAbility(Constants.SECOND_BASE, -4)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, -3)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 4)
                plusAbility(Constants.CONTACT, -1)
                plusAbility(Constants.POWER, 4)
                plusAbility(Constants.ARM_STRENGTH, 6)
                plusAbility(Constants.FIELDING, -4)
                plusAbility(Constants.CATCHING, -2)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, -5)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, -5)
                plusAbility(Constants.AMOUNT_CHANGE, -4)
            }
            womanAnswersP4[4] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, 5)
                plusAbility(Constants.SECOND_BASE, -4)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -3)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.CONTACT, -3)
                plusAbility(Constants.POWER, 7)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 6)
                plusAbility(Constants.FIELDING, -3)
                plusAbility(Constants.CATCHING, -3)
                plusSpecial(Constants.CHANCE, -0.05)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.CONTROL, -3)
                plusAbility(Constants.STAMINA, 10)
                plusAbility(Constants.KIND_CHANGE, -2)
                plusAbility(Constants.AMOUNT_CHANGE, -2)
                plusAbility(Constants.STARTER, 4)
            }
        }

        val womanAnswersP5 = context.resources.getStringArray(R.array.w_array_q5_p)
        when (a5_p) {
            womanAnswersP5[0] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 2)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
            }
            womanAnswersP5[1] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 2)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 5)
                plusAbility(Constants.BALLISTIC, 6)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 1)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 2)
                plusAbility(Constants.FIELDING, 2)
                plusAbility(Constants.CATCHING, -2)
                plusSpecial(Constants.CHANCE, 0.03)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.KIND_CHANGE, 8)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
            }
            womanAnswersP5[2] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, -2)
                plusAbility(Constants.OUTFIELD, 4)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.SPEED, 3)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 6)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
            }
            womanAnswersP5[3] -> {
                plusAbility(Constants.CATCHER, 4)
                plusAbility(Constants.FIRST_BASE, -1)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 2)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.SPEED, 6)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 4)
                plusAbility(Constants.CATCHING, 3)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, 9)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 8)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.STARTER, 3)
            }
            womanAnswersP5[4] -> {
                plusAbility(Constants.THIRD_BASE, -3)
                plusAbility(Constants.OUTFIELD, -3)
                plusAbility(Constants.BALLISTIC, -3)
                plusAbility(Constants.POWER, -2)
                plusAbility(Constants.FIELDING, -2)
                plusAbility(Constants.CATCHING, -2)
                plusSpecial(Constants.CHANCE, -0.03)
                plusAbility(Constants.CONTROL, -2)
                plusAbility(Constants.KIND_CHANGE, -3)
                plusAbility(Constants.AMOUNT_CHANGE, -3)
            }
            womanAnswersP5[5] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, -4)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, -5)
                plusAbility(Constants.OUTFIELD, 4)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.POWER, 6)
                plusAbility(Constants.SPEED, 8)
                plusAbility(Constants.ARM_STRENGTH, 7)
                plusAbility(Constants.FIELDING, 3)
                plusAbility(Constants.CATCHING, 2)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 7)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 7)
                plusAbility(Constants.KIND_CHANGE, 8)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
            }
        }

        val womanAnswersPop1 = context.resources.getStringArray(R.array.w_array_q1_o)
        when (a1_o) {
            womanAnswersPop1[0] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, -5)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 9)
                plusAbility(Constants.CONTACT, 15)
                plusAbility(Constants.POWER, 10)
                plusAbility(Constants.SPEED, 8)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.FIELDING, 5)
                plusAbility(Constants.CATCHING, 3)
                plusAbility(Constants.BALL_SPEED, 15)
                plusAbility(Constants.CONTROL, 5)
                plusAbility(Constants.STAMINA, 5)
                plusAbility(Constants.KIND_CHANGE, 18)
                plusAbility(Constants.AMOUNT_CHANGE, 18)
                plusAbility(Constants.STARTER, 6)
            }
            womanAnswersPop1[1] -> {
                plusAbility(Constants.CATCHER, 1)
                plusAbility(Constants.FIRST_BASE, -3)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 3)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 6)
                plusAbility(Constants.CONTACT, 10)
                plusAbility(Constants.POWER, 8)
                plusAbility(Constants.SPEED, 6)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.CATCHING, 3)
                plusAbility(Constants.BALL_SPEED, 12)
                plusAbility(Constants.CONTROL, 3)
                plusAbility(Constants.STAMINA, 3)
                plusAbility(Constants.KIND_CHANGE, 12)
                plusAbility(Constants.AMOUNT_CHANGE, 12)
                plusAbility(Constants.STARTER, 3)
            }
            womanAnswersPop1[2] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.THIRD_BASE, 2)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 6)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 6)
                plusAbility(Constants.BALL_SPEED, 10)
                plusAbility(Constants.CONTROL, 1)
                plusAbility(Constants.KIND_CHANGE, 8)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
            }
            womanAnswersPop1[3] -> {
                plusAbility(Constants.BALLISTIC, 1)
                plusAbility(Constants.CONTACT, 3)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
            }
            womanAnswersPop1[4] -> {
                plusAbility(Constants.SHORTSTOP, -5)
                plusAbility(Constants.CONTACT, -3)
                plusAbility(Constants.POWER, -3)
                plusAbility(Constants.SPEED, -2)
                plusAbility(Constants.ARM_STRENGTH, -1)
                plusAbility(Constants.FIELDING, -1)
                plusAbility(Constants.BALL_SPEED, -3)
                plusAbility(Constants.CONTROL, -1)
                plusAbility(Constants.STAMINA, -1)
                plusAbility(Constants.KIND_CHANGE, -3)
                plusAbility(Constants.AMOUNT_CHANGE, -3)
                plusAbility(Constants.MIDDLE, 5)
            }
        }

        val womanAnswersPop2 = context.resources.getStringArray(R.array.w_array_q2_o)
        when (a2_o) {
            womanAnswersPop2[0] -> {
                plusAbility(Constants.CATCHER, 5)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 8)
                plusAbility(Constants.ARM_STRENGTH, 12)
                plusAbility(Constants.FIELDING, 12)
                plusAbility(Constants.CATCHING, 15)
                plusAbility(Constants.BALL_SPEED, 5)
                plusAbility(Constants.CONTROL, 18)
                plusAbility(Constants.STAMINA, 18)
                plusAbility(Constants.KIND_CHANGE, 5)
                plusAbility(Constants.AMOUNT_CHANGE, 5)
                plusAbility(Constants.STARTER, 6)
            }
            womanAnswersPop2[1] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.SECOND_BASE, 1)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.SPEED, 5)
                plusAbility(Constants.ARM_STRENGTH, 8)
                plusAbility(Constants.FIELDING, 8)
                plusAbility(Constants.CATCHING, 10)
                plusAbility(Constants.BALL_SPEED, 3)
                plusAbility(Constants.CONTROL, 12)
                plusAbility(Constants.STAMINA, 12)
                plusAbility(Constants.KIND_CHANGE, 3)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.STARTER, 3)
            }
            womanAnswersPop2[2] -> {
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 1)
                plusAbility(Constants.SPEED, 3)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.FIELDING, 4)
                plusAbility(Constants.CATCHING, 6)
                plusAbility(Constants.BALL_SPEED, 1)
                plusAbility(Constants.KIND_CHANGE, 1)
                plusAbility(Constants.AMOUNT_CHANGE, 1)
                plusAbility(Constants.CONTROL, 6)
                plusAbility(Constants.STAMINA, 6)
            }
            womanAnswersPop2[3] -> {
                plusAbility(Constants.CATCHER, -3)
                plusAbility(Constants.SECOND_BASE, -1)
                plusAbility(Constants.ARM_STRENGTH, 1)
                plusAbility(Constants.FIELDING, 1)
                plusAbility(Constants.BALL_SPEED, 1)
                plusAbility(Constants.CONTROL, -5)
                plusAbility(Constants.STAMINA, -1)
            }
            womanAnswersPop2[4] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.CONTACT, -1)
                plusAbility(Constants.POWER, -1)
                plusAbility(Constants.SPEED, -1)
                plusAbility(Constants.ARM_STRENGTH, -5)
                plusAbility(Constants.FIELDING, -8)
                plusAbility(Constants.CATCHING, -6)
                plusAbility(Constants.BALL_SPEED, -1)
                plusAbility(Constants.CONTROL, -8)
                plusAbility(Constants.STAMINA, -3)
                plusAbility(Constants.KIND_CHANGE, -2)
                plusAbility(Constants.AMOUNT_CHANGE, -2)
            }
        }

        val womanAnswersPop3 = context.resources.getStringArray(R.array.w_array_q3_o)
        when (a3_o) {
            womanAnswersPop3[0] -> {
                plusSpecial(Constants.CHANCE, 0.15)
                plusAbility(Constants.CLOSER, 5)
            }
            womanAnswersPop3[1] -> {
                plusSpecial(Constants.CHANCE, 0.08)
                plusAbility(Constants.CLOSER, 2)
            }
            womanAnswersPop3[2] -> {
            }
            womanAnswersPop3[3] -> {
                plusSpecial(Constants.CHANCE, -0.08)
                plusAbility(Constants.CLOSER, -2)
            }
            womanAnswersPop3[4] -> {
                plusSpecial(Constants.CHANCE, -0.15)
                plusAbility(Constants.CLOSER, -5)
            }
        }

        val womanAnswersPop5 = context.resources.getStringArray(R.array.w_array_q5_o)
        when (a5_o) {
            womanAnswersPop5[0] -> {
            }
            womanAnswersPop5[1] -> {
                plusAbility(Constants.CATCHER, 3)
                plusAbility(Constants.FIRST_BASE, -2)
                plusAbility(Constants.SECOND_BASE, -2)
                plusAbility(Constants.THIRD_BASE, 4)
                plusAbility(Constants.SHORTSTOP, 2)
                plusAbility(Constants.OUTFIELD, 7)
                plusAbility(Constants.BALLISTIC, 4)
                plusAbility(Constants.POWER, 7)
                plusAbility(Constants.SPEED, 14)
                plusAbility(Constants.ARM_STRENGTH, 10)
                plusAbility(Constants.BALL_SPEED, 14)
                plusAbility(Constants.STAMINA, 18)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.FOLK, 3)
                plusAbility(Constants.SHOOT, 3)
                plusAbility(Constants.STARTER, 6)
            }
            womanAnswersPop5[2] -> {
                plusAbility(Constants.CATCHER, 10)
                plusAbility(Constants.FIRST_BASE, 3)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -3)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 6)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 8)
                plusAbility(Constants.SPEED, 1)
                plusAbility(Constants.ARM_STRENGTH, 10)
                plusAbility(Constants.FIELDING, 2)
                plusSpecial(Constants.CHANCE, 0.03)
                plusAbility(Constants.BALL_SPEED, 12)
                plusAbility(Constants.AMOUNT_CHANGE, 10)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.FOLK, 6)
                plusAbility(Constants.SHOOT, 4)
                plusAbility(Constants.CLOSER, 15)
            }
            womanAnswersPop5[3] -> {
                plusAbility(Constants.CATCHER, -8)
                plusAbility(Constants.FIRST_BASE, 10)
                plusAbility(Constants.SECOND_BASE, -10)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, 1)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 20)
                plusAbility(Constants.CONTACT, 10)
                plusAbility(Constants.POWER, 15)
                plusAbility(Constants.SPEED, -5)
                plusAbility(Constants.ARM_STRENGTH, -5)
                plusAbility(Constants.FIELDING, -6)
                plusAbility(Constants.CATCHING, -10)
                plusAbility(Constants.BALL_SPEED, 15)
                plusAbility(Constants.CONTROL, -4)
                plusAbility(Constants.STAMINA, -4)
                plusAbility(Constants.KIND_CHANGE, 8)
                plusAbility(Constants.AMOUNT_CHANGE, 16)
                plusAbility(Constants.SLIDER, 3)
                plusAbility(Constants.SINKER, 4)
                plusAbility(Constants.SHOOT, 4)
                plusAbility(Constants.STARTER, -8)
            }
            womanAnswersPop5[4] -> {
                plusAbility(Constants.CATCHER, 2)
                plusAbility(Constants.FIRST_BASE, 1)
                plusAbility(Constants.SECOND_BASE, 2)
                plusAbility(Constants.THIRD_BASE, 1)
                plusAbility(Constants.SHORTSTOP, 5)
                plusAbility(Constants.OUTFIELD, 2)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 5)
                plusAbility(Constants.POWER, 5)
                plusAbility(Constants.SPEED, 5)
                plusAbility(Constants.ARM_STRENGTH, 5)
                plusAbility(Constants.FIELDING, 10)
                plusAbility(Constants.CATCHING, 8)
                plusAbility(Constants.BALL_SPEED, 10)
                plusAbility(Constants.CONTROL, 11)
                plusAbility(Constants.STAMINA, 11)
                plusAbility(Constants.KIND_CHANGE, 2)
                plusAbility(Constants.AMOUNT_CHANGE, 8)
                plusAbility(Constants.SLIDER, 5)
                plusAbility(Constants.FOLK, 4)
                plusAbility(Constants.STARTER, 6)
            }
            womanAnswersPop5[5] -> {
                plusAbility(Constants.CATCHER, -5)
                plusAbility(Constants.FIRST_BASE, 5)
                plusAbility(Constants.SECOND_BASE, -5)
                plusAbility(Constants.THIRD_BASE, 3)
                plusAbility(Constants.SHORTSTOP, -2)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 3)
                plusAbility(Constants.CONTACT, 2)
                plusAbility(Constants.POWER, 1)
                plusAbility(Constants.SPEED, 2)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, -1)
                plusAbility(Constants.CATCHING, -2)
                plusSpecial(Constants.CHANCE, 0.01)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.STAMINA, -7)
                plusAbility(Constants.AMOUNT_CHANGE, 2)
                plusAbility(Constants.SINKER, 2)
                plusAbility(Constants.SHOOT, 4)
                plusAbility(Constants.STARTER, -6)
            }
            womanAnswersPop5[6] -> {
                plusAbility(Constants.CATCHER, -1)
                plusAbility(Constants.FIRST_BASE, 5)
                plusAbility(Constants.SECOND_BASE, -3)
                plusAbility(Constants.THIRD_BASE, 5)
                plusAbility(Constants.SHORTSTOP, -1)
                plusAbility(Constants.OUTFIELD, 3)
                plusAbility(Constants.BALLISTIC, 7)
                plusAbility(Constants.CONTACT, 1)
                plusAbility(Constants.POWER, 3)
                plusAbility(Constants.ARM_STRENGTH, 3)
                plusAbility(Constants.FIELDING, -1)
                plusAbility(Constants.CATCHING, -3)
                plusSpecial(Constants.CHANCE, 0.02)
                plusAbility(Constants.BALL_SPEED, 4)
                plusAbility(Constants.CONTROL, -5)
                plusAbility(Constants.AMOUNT_CHANGE, 3)
                plusAbility(Constants.SLIDER, 2)
                plusAbility(Constants.FOLK, 4)
                plusAbility(Constants.CLOSER, 5)
            }
        }

        val womanAnswersPop4 = context.resources.getStringArray(R.array.w_array_q4_o)
        when (a4_o) {
            womanAnswersPop4[0] -> {
                contact = (contact * 1.2).toInt()
                power = (power * 1.2).toInt()
                speed = (speed * 1.2).toInt()
                armStrength = (armStrength * 1.2).toInt()
                fielding = (fielding * 1.2).toInt()
                catching = (catching * 1.2).toInt()
                ballSpeed = (ballSpeed * 1.15).toInt()
                control = (control * 1.15).toInt()
                stamina = (stamina * 1.15).toInt()
                kindsOfChangeBall = (kindsOfChangeBall * 1.3).toInt()
                amountOfChange = (amountOfChange * 1.3).toInt()
            }
            womanAnswersPop4[1] -> {
                contact = (contact * 1.1).toInt()
                power = (power * 1.1).toInt()
                speed = (speed * 1.1).toInt()
                armStrength = (armStrength * 1.1).toInt()
                fielding = (fielding * 1.1).toInt()
                catching = (catching * 1.1).toInt()
                ballSpeed = (ballSpeed * 1.1).toInt()
                control = (control * 1.1).toInt()
                stamina = (stamina * 1.1).toInt()
                kindsOfChangeBall = (kindsOfChangeBall * 1.15).toInt()
                amountOfChange = (amountOfChange * 1.15).toInt()
            }
            womanAnswersPop4[2] -> {
            }
            womanAnswersPop4[3] -> {
                contact = (contact * 1.1).toInt()
                power = (power * 1.1).toInt()
                speed = (speed * 1.1).toInt()
                armStrength = (armStrength * 1.1).toInt()
                fielding = (fielding * 1.1).toInt()
                catching = (catching * 1.1).toInt()
                ballSpeed = (ballSpeed * 1.1).toInt()
                control = (control * 1.1).toInt()
                stamina = (stamina * 1.1).toInt()
                kindsOfChangeBall = (kindsOfChangeBall * 1.1).toInt()
                amountOfChange = (amountOfChange * 1.1).toInt()
            }
            womanAnswersPop4[4] -> {
                contact = (contact * 0.9).toInt()
                power = (power * 0.9).toInt()
                speed = (speed * 0.9).toInt()
                armStrength = (armStrength * 0.9).toInt()
                fielding = (fielding * 0.9).toInt()
                catching = (catching * 0.9).toInt()
                control = (control * 0.9).toInt()
                stamina = (stamina * 0.9).toInt()
                kindsOfChangeBall = (kindsOfChangeBall * 0.8).toInt()
                amountOfChange = (amountOfChange * 0.8).toInt()
            }
        }

        setPitcherType()
        calcBallistic()
        setPosition()

    }

    private fun plusAbility(initial: String, point: Int) {
        when (initial) {
            Constants.BALLISTIC -> ballistic += point
            Constants.CONTACT -> contact += point
            Constants.POWER -> power += point
            Constants.SPEED -> speed += point
            Constants.ARM_STRENGTH -> armStrength += point
            Constants.FIELDING -> fielding += point
            Constants.CATCHING -> catching += point

            Constants.CATCHER -> positions[CATCHER_INDEX] += point
            Constants.FIRST_BASE -> positions[FIRST_BASE_INDEX] += point
            Constants.SECOND_BASE -> positions[SECOND_BASE_INDEX] += point
            Constants.THIRD_BASE -> positions[THIRD_BASE_INDEX] += point
            Constants.SHORTSTOP -> positions[SHORTSTOP_INDEX] += point
            Constants.OUTFIELD -> positions[OUTFIELD_INDEX] += point

            Constants.BALL_SPEED -> ballSpeed += point
            Constants.CONTROL -> control += point
            Constants.STAMINA -> stamina += point
            Constants.KIND_CHANGE -> kindsOfChangeBall += point
            Constants.AMOUNT_CHANGE -> amountOfChange += point

            Constants.SLIDER -> priorityOfChange[SLIDER_INDEX] += point
            Constants.CURB -> priorityOfChange[CURB_INDEX] += point
            Constants.FOLK -> priorityOfChange[FOLK_INDEX] += point
            Constants.SINKER -> priorityOfChange[SINKER_INDEX] += point
            Constants.SHOOT -> priorityOfChange[SHOOT_INDEX] += point

            Constants.STARTER -> pitcherTypes[STARTER_INDEX] += point
            Constants.MIDDLE -> pitcherTypes[MIDDLE_INDEX] += point
            Constants.CLOSER -> pitcherTypes[CLOSER_INDEX] += point
        }
    }

    private fun plusSpecial(initial: String, point: Double) {
        when (initial) {
            Constants.CHANCE -> chance += point
        }
    }

    // decide pitcher type
    private fun setPitcherType() {

        val typeIndex = pitcherTypes.indices.maxBy {
            pitcherTypes[it]
        } ?: STARTER_INDEX
        when (typeIndex) {
            STARTER_INDEX -> {
                pitcherType = Constants.STARTER
                if (stamina < Constants.NEEDED_STARTER_STAMINA) setSecondType()
            }
            MIDDLE_INDEX -> {
                pitcherType = Constants.MIDDLE
            }
            CLOSER_INDEX -> {
                pitcherType = Constants.CLOSER
            }
        }
    }

    private fun setSecondType() {
        pitcherType = Constants.MIDDLE
        if (pitcherTypes[CLOSER_INDEX] > pitcherTypes[MIDDLE_INDEX]) pitcherType = Constants.CLOSER
    }

    private fun setPosition() {
        val positionIndex = positions.indices.maxBy {
            positions[it]
        }
        position = when (positionIndex) {
            CATCHER_INDEX -> Constants.CATCHER
            FIRST_BASE_INDEX -> Constants.FIRST_BASE
            SECOND_BASE_INDEX -> Constants.SECOND_BASE
            THIRD_BASE_INDEX -> Constants.THIRD_BASE
            SHORTSTOP_INDEX -> Constants.SHORTSTOP
            else -> Constants.OUTFIELD
        }
    }

    private fun calcBallistic() {
        ballistic = when (ballistic) {
            in 0..10 -> 1
            in 11..20 -> 2
            in 21..30 -> when (power) {
                in 0..20 -> 2
                else -> 3
            }
            else -> when (power) {
                in 0..20 -> 2
                in 21..30 -> 3
                else -> 4
            }
        }
    }


}